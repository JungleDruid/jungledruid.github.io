{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["GameModal","props","react_default","a","createElement","Fade_default","duration","className","style","width","height","children","ariaLabel","onClick","onClose","GameCard","bottom","distance","src","cover","alt","title","genre","App","state","modal","imageIsReady","_this2","this","img","Image","onload","setState","_this3","App_GameModal","closeModal","position","FadeLoader_default","size","color","css","display","top","left","modalRtsrpg","maxWidth","margin","delay","marginTop","_this4","App_GameCard","href","target","rel","marginBottom","renderInfo","renderProjects","renderModal","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4bedac6.chunk.js","sourcesContent":["import React from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport \"./mystyles.scss\";\n\nconst GameModal = props => {\n  return (\n    <Fade duration={200}>\n      <div className=\"modal is-active\">\n        <div className=\"modal-background\" />\n        <div\n          className=\"modal-content\"\n          style={{ width: \"auto\", height: \"auto\" }}\n        >\n          {props.children}\n        </div>\n        <button\n          className=\"modal-close is-large\"\n          ariaLabel=\"close\"\n          onClick={props.onClose}\n        />\n      </div>\n    </Fade>\n  );\n};\n\nconst GameCard = props => {\n  return (\n    <Fade bottom distance=\"1.5em\" duration={1500}>\n      <div className=\"column is-half is-one-third-widescreen\">\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <figure className=\"image\">\n              <img src={props.cover} alt=\"Placeholder\" />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"content\">\n              <p className=\"title\">{props.title}</p>\n              <p className=\"subtitle has-text-grey\">{props.genre}</p>\n              {props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fade>\n  );\n};\n\nclass App extends React.Component {\n  state = {\n    modal: null,\n    imageIsReady: false\n  };\n\n  componentDidMount() {\n    const img = new Image();\n    img.src = \"img/my_pic.jpg\";\n    img.onload = () => {\n      this.setState({ imageIsReady: true });\n    };\n  }\n\n  closeModal() {\n    this.setState({ modal: null });\n  }\n\n  modalRtsrpg() {\n    return (\n      <GameModal onClose={() => this.closeModal()}>\n        <div\n          style={{\n            width: 800,\n            height: 500,\n            position: \"relative\"\n          }}\n        >\n          <FadeLoader\n            size={100}\n            color={\"#FFF\"}\n            css={{\n              display: \"block\",\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\"\n            }}\n          />\n          <iframe\n            title=\"game\"\n            src=\"games/rtsrpg\"\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              position: \"relative\"\n            }}\n          />\n        </div>\n        <div className=\"box content\">\n          <h3>Controls:</h3>\n          <p>WASD: Movements</p>\n          <p>Left Click: Select / Move to</p>\n          <p>F1: Select the Ranger</p>\n          <p>F2: Select the Warrior</p>\n          <p>Space: Pause</p>\n          <p>U: Mute / Unmute</p>\n        </div>\n      </GameModal>\n    );\n  }\n\n  renderModal() {\n    switch (this.state.modal) {\n      case \"rtsrpg\":\n        return this.modalRtsrpg();\n      default:\n        return null;\n    }\n  }\n\n  renderInfo() {\n    return (\n      <section className=\"hero is-primary is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            <Fade>\n              <figure\n                className=\"image\"\n                style={{ maxWidth: 512, margin: \"0 auto\" }}\n              >\n                <img\n                  alt=\"Yonsh Lin\"\n                  src=\"img/my_pic.jpg\"\n                  className=\"is-rounded\"\n                />\n              </figure>\n            </Fade>\n            <Fade left delay={200} distance=\"0.6em\">\n              <h2 className=\"subtitle is-size-4\" style={{ marginTop: 20 }}>\n                Hi, I'm\n              </h2>\n            </Fade>\n            <Fade left delay={400} distance=\"0.6em\">\n              <h1 className=\"title is-size-1\">Yonsh Lin</h1>\n            </Fade>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  renderProjects() {\n    return (\n      <section className=\"hero is-warning\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <Fade bottom distance=\"1em\" duration={500}>\n              <h1 className=\"title has-text-centered\">\n                Take a look at some of my indie game projects\n              </h1>\n            </Fade>\n            <div className=\"columns is-multiline\">\n              <GameCard\n                title=\"Defenders of the Realm\"\n                genre=\"RTS/RPG\"\n                cover=\"img/rtsrpg.jpg\"\n              >\n                <p>\n                  A game I made when{\" \"}\n                  <a\n                    href=\"https://esotericsoftware.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Spine\n                  </a>{\" \"}\n                  was just released.\n                </p>\n                <p style={{ marginBottom: 0 }}>Features & Techs:</p>\n                <ul style={{ marginTop: 0 }}>\n                  <li>Threat system</li>\n                  <li>Can issue commands when paused</li>\n                  <li>The warrior has an AI that protects the ranger</li>\n                  <li>Spine animations</li>\n                </ul>\n                <button\n                  className=\"button is-primary\"\n                  onClick={() => this.setState({ modal: \"rtsrpg\" })}\n                >\n                  Try it out!\n                </button>\n              </GameCard>\n              <GameCard\n                cover=\"img/diary_game/cover.jpg\"\n                title=\"Adventurer's Diary\"\n                genre=\"Adventure/Idle\"\n              >\n                <p>\n                  A mobile game I made with a guy I found on PTT (an online\n                  forum in Taiwan).\n                </p>\n                <p style={{ marginBottom: 0 }}>Features & Techs:</p>\n                <ul style={{ marginTop: 0 }}>\n                  <li>The game progresses even when it's closed</li>\n                  <li>Event driven adventures</li>\n                  <li>Parses programs from the data</li>\n                  <li>Advertisements</li>\n                </ul>\n                <button\n                  className=\"button is-primary\"\n                  onClick={() => this.setState({ modal: \"diary_game\" })}\n                >\n                  Details\n                </button>\n              </GameCard>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  render() {\n    if (this.state.imageIsReady) {\n      return (\n        <div className=\"App\">\n          {this.renderInfo()}\n          {this.renderProjects()}\n          {this.renderModal()}\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}